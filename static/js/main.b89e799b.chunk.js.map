{"version":3,"sources":["logo.svg","pages/Main.js","components/InputBox.js","components/PfItem.js","components/PfList.js","components/Count.js","pages/Portfolio.js","components/Header.js","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["About","styled","main","Main","class","className","alt","src","process","id","Inputbox","div","InputBox","pfList","setPfList","useState","title","setTitle","project","setProject","skill","setSkill","inputRef","useRef","type","name","ref","onChange","e","target","value","Button","variant","onClick","alert","today","Date","nextpfList","concat","length","date","getFullYear","getMonth","getDate","done","console","log","ItemName","span","chk","EditBtn","button","DelBtn","EditInput","input","CheckBox","PfItem","pfItem","checked","editInputRef","edited","setEdited","newTitle","setnewTitle","newProject","setnewProject","newSkill","setnewSkill","useEffect","current","focus","sticky_note","icon","faStickyNote","calendar_alt","faCalendarAlt","fa_cog","faCog","map","item","window","confirm","deleted","ListBox","ListTitle","p","List","ul","PfList","checkedList","Count","filter","PortfolioMain","Portfolio","color","allpfList","Menu","nav","MenuDiv","MenuLogo","h2","MenuUl","MenuLi","li","Header","to","path","element","Homepage","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b89e799b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState,useRef,useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport '../Main.css';\r\n\r\nconst About = styled.main`\r\n    display: block;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    width: 80%;\r\n`;\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <About>\r\n            <div class=\"about\">\r\n                <div class=\"profile\">\r\n                    <img className=\"selfie\" alt=\"ChaeYeon Son\" src={`${process.env.PUBLIC_URL}/zepeto.jpg`}/>\r\n                    <div class=\"info\">\r\n                        <div class=\"title\">ChaeYeon Son</div>\r\n                        <div class=\"description\">PHP web developer</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"content\">\r\n                <h1 id=\"about-me\">About Me</h1>\r\n                I love PHP 😍 «&nbsp;This can express me in one sentence. 😉<br/>\r\n                Currently, I’m learning Vanila Javascript , React , Node.js <br/>\r\n                I want to be a Front-end Web Developer\r\n\r\n                <br/>\r\n\r\n                <h1 id=\"career\">Career</h1>\r\n                <ul>\r\n                    <li>First Company (2020/10 ~ ing)\r\n                        <ul>\r\n                            <li>1st B2B Open Market</li>\r\n                            <li>PHP Web Developer</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n\r\n                <br/>\r\n\r\n                <h1 id=\"interests\">Interests</h1>\r\n                I am interested in technology trends.<br/>\r\n                I’m not afraid to learn languages.🤭<br/>\r\n                I like to study many languages.<br/>\r\n                I want to be a great at web development.<br/>\r\n                In Php ,React ,Node.js …or else. 🧐\r\n\r\n                <br/>\r\n            </div>\r\n        </About>\r\n    );\r\n}\r\n","import React, {useState,useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Inputbox = styled.div`\r\n    margin-top:20px;\r\n    padding:10px;\r\n    width: 350px;\r\n    border : 1px solid #000000; \r\n`;\r\n\r\nexport const InputBox = ({pfList,setPfList}) => {\r\n    const [title,setTitle] = useState('');\r\n    const [project,setProject] = useState('');\r\n    const [skill,setSkill] = useState('');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    //정상동작 확인(pfList에 대해서)\r\n    // useEffect(() => {\r\n    //     console.log(pfList);\r\n    // },[pfList])\r\n\r\n    const TitleHandler = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const ProjectHandler = (e) => {\r\n        setProject(e.target.value);\r\n    }\r\n\r\n    const SkillHandler = (e) => {\r\n        setSkill(e.target.value);\r\n    }\r\n\r\n    const onClickBtn = () => {\r\n        if(!title || !project || !skill)\r\n        {\r\n            alert('값이 빠졌습니다. 빈값을 확인하고 다시 입력해주세요');\r\n            return false;\r\n        }\r\n\r\n        const today = new Date();\r\n\r\n        const nextpfList = pfList.concat({\r\n            id: pfList.length,\r\n            title : title,\r\n            project : project,\r\n            skill : skill,\r\n            date : today.getFullYear()+'-'+(today.getMonth() + 1)+'-'+today.getDate(),\r\n            done : false\r\n        })\r\n\r\n        setPfList(nextpfList);\r\n\r\n        //input값 초기화\r\n        setTitle('');\r\n        setProject('');\r\n        setSkill('');\r\n        \r\n        // inputRef.current.focus(); //클릭 후 포커싱\r\n        console.log(nextpfList);\r\n    }\r\n\r\n    return (\r\n        <Inputbox>\r\n            <p><b>포트폴리오 추가하기</b></p>\r\n            제목 : <input type=\"text\" name=\"title\" ref={inputRef} onChange={TitleHandler} value={title}/> <br/>\r\n            프로젝트명 : <input type=\"text\" name=\"project\" onChange={ProjectHandler} value={project}/> <br/>\r\n            사용 스킬명 : <input type=\"text\" name=\"skill\" onChange={SkillHandler} value={skill}/> <br/>\r\n            <Button variant=\"outlined\" onClick={onClickBtn} type=\"submit\">추가</Button>\r\n        </Inputbox>\r\n    );\r\n}\r\n","import React, { useEffect , useState , useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ItemName = styled.span`\r\n    flex: 1;\r\n    ${({chk}) => {\r\n        return chk === true ? \r\n        'font-style: italic; text-decoration: line-through; color: #868e96;'\r\n        : null;\r\n    }}\r\n`;\r\nconst EditBtn = styled.button`\r\n    border: none; \r\n    border-radius: 0; \r\n    height: 36px; \r\n    width: 36px; \r\n    margin-right: 3px;\r\n    background-color: inherit;\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: #d0ebff;\r\n      }\r\n`;\r\nconst DelBtn = styled.button`\r\n    border: none; \r\n    border-radius: 0; \r\n    height: 36px; \r\n    width: 36px; \r\n    background-color: inherit;\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: #d0ebff;\r\n      }\r\n`;\r\nconst EditInput = styled.input`\r\nflex: 1; \r\nborder: 1px solid black; \r\npadding: 5px; \r\nfont-size: 1em; \r\nbox-sizing: border-box;\r\n`;\r\nconst CheckBox = styled.input`\r\n    margin-right: 10px;\r\n`;\r\nconst PfItem = ({pfItem,pfList,setPfList,checked}) => {\r\n    const editInputRef = useRef(null);\r\n\r\n    const [edited,setEdited] = useState(false);\r\n    const [newTitle,setnewTitle] = useState(pfItem.title);//처음에는 기존의 값\r\n    const [newProject,setnewProject] = useState(pfItem.title);//처음에는 기존의 값\r\n    const [newSkill,setnewSkill] = useState(pfItem.title);//처음에는 기존의 값\r\n\r\n    const onClickDelete = () => {\r\n        if(window.confirm('해당 포트폴리오를 지우겠습니까?'))\r\n        {\r\n            const nextpfList = pfList.map((item)=>(\r\n                {\r\n                    ...item,\r\n                    deleted : item.id === pfItem.id ? true : item.deleted\r\n                }\r\n            ));\r\n            setPfList(nextpfList);\r\n        }\r\n    }\r\n\r\n    const onChangeChk = () => {\r\n        //리스트를 돌리면서 해당하는 id값인 경우 done을 반대로 처리함.\r\n        //아니라면 그냥 done 값 유지\r\n        const nextpfList = pfList.map((item) => (\r\n            {\r\n                ...item,\r\n                done : item.id === pfItem.id ? !item.done : item.done\r\n            }\r\n        ));\r\n        //다시 리스트 값 설정\r\n        setPfList(nextpfList);\r\n    };\r\n\r\n    //수정버튼으로 변경하기\r\n    const onClickEditButton = () => \r\n    {\r\n        setEdited(true);\r\n    }\r\n\r\n    //새로운 글자 세팅\r\n    const onChangeEditTitle = (e) => {\r\n        setnewTitle(e.target.value);\r\n    }\r\n\r\n    const onChangeEditProject = (e) => {\r\n        setnewProject(e.target.value);\r\n    }\r\n\r\n    const onChangeEditSkill = (e) => {\r\n        setnewSkill(e.target.value);\r\n    }\r\n\r\n    //서브밋시키기\r\n    function onClickSubmitButton (){\r\n        const nextpfList = pfList.map((item)=>(\r\n            {\r\n                ...item,\r\n                title : item.id === pfItem.id ? newTitle : item.title,\r\n                project : item.id === pfItem.id ? newProject : item.project,\r\n                skill : item.id === pfItem.id ? newSkill : item.skill\r\n            }\r\n        ));\r\n        setPfList(nextpfList); //새롭게 리스트 수정\r\n\r\n        setEdited(false); // 수정상태에서 다시 읽기로 변경\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if (edited)\r\n        {\r\n            editInputRef.current.focus();\r\n        }\r\n    },[edited]);\r\n    \r\n    const sticky_note = <FontAwesomeIcon icon={faStickyNote} />\r\n    const calendar_alt = <FontAwesomeIcon icon={faCalendarAlt} />\r\n    const fa_cog = <FontAwesomeIcon icon={faCog} />\r\n\r\n    return (\r\n        <div class=\"portfolio-item\">\r\n                <div>\r\n                    <h1 class=\"portfolio-title\">\r\n                    <CheckBox onChange={onChangeChk} checked={pfItem.done} type=\"checkbox\" />\r\n                        {\r\n                            edited ? \r\n                            <EditInput\r\n                                name=\"title\"\r\n                                type=\"text\"\r\n                                value={newTitle}\r\n                                ref={editInputRef}\r\n                                onChange={onChangeEditTitle}\r\n                            /> :\r\n                           <ItemName chk={checked}>{pfItem.title}</ItemName>\r\n                         }\r\n                    </h1>\r\n                    <div class=\"portfolio-line\"></div>\r\n\r\n                    <div class=\"portfolio-content\"> \r\n                        <span class=\"portfolio-icon\">\r\n                            {sticky_note} <span class=\"portfolio-icon-text\">\r\n                            {\r\n                                edited ? \r\n                                    <EditInput\r\n                                        name=\"project\"\r\n                                        type=\"text\"\r\n                                        value={newProject}\r\n                                        onChange={onChangeEditProject}\r\n                                    /> :\r\n                                    <ItemName chk={checked}>{pfItem.project}</ItemName>\r\n                            }\r\n                         </span>\r\n                        </span>\r\n                        <br/>\r\n                        <span class=\"portfolio-icon\">\r\n                            {calendar_alt} <span class=\"portfolio-icon-text\">{pfItem.date}</span>\r\n                        </span>\r\n                        <br/>\r\n                        <span class=\"portfolio-icon\">\r\n                            {fa_cog} <span class=\"portfolio-icon-text\">\r\n                            {\r\n                                edited ? \r\n                                    <EditInput\r\n                                        name=\"skill\"\r\n                                        type=\"text\"\r\n                                        value={newSkill}\r\n                                        onChange={onChangeEditSkill}\r\n                                    /> :\r\n                                    <ItemName chk={checked}>{pfItem.skill}</ItemName>\r\n                            }\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            { \r\n                //완료된 프로젝트는 수정 불가\r\n                !pfItem.done ? \r\n                    edited ? \r\n                    (<EditBtn type=\"button\" onClick={onClickSubmitButton} > 👌 </EditBtn>) :\r\n                    (<EditBtn type=\"button\" onClick={onClickEditButton}> ✏ </EditBtn>)\r\n                : null\r\n            }\r\n            <DelBtn type=\"button\" onClick={onClickDelete}> 🗑 </DelBtn>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PfItem;","import React from 'react';\r\nimport PfItem from './PfItem';\r\nimport styled from 'styled-components';\r\n\r\nconst ListBox = styled.div`\r\nmargin-top: 30px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\nconst ListTitle = styled.p`\r\nfont-weight: bold;\r\nmargin: 0;\r\n}\r\n`;\r\nconst List = styled.ul`\r\nlist-style: none;\r\ndisplay: flex;\r\nflex-direction: column; \r\njustify-content: center;\r\n padding: 0;\r\n`;\r\n\r\nconst PfList = ({title,pfList,setPfList,checkedList}) => {\r\n    \r\n    return(\r\n        <ListBox>\r\n            <ListTitle>{title}</ListTitle>\r\n            <List>\r\n               {pfList && //pfList가 있을때만 함\r\n                pfList.map((item)=>\r\n                { \r\n                    //받아온 checkList값에 따라 내용 출력\r\n                    if(checkedList !== item.done) return null;\r\n\r\n                    //삭제된 포트폴리오는 출력하지 않음\r\n                    if(item.deleted) return null;\r\n\r\n                    return (\r\n                        <PfItem \r\n                            key={item.id}\r\n                            pfItem={item}\r\n                            pfList={pfList}\r\n                            setPfList={setPfList}\r\n                            checked={checkedList}\r\n                        />\r\n                    )\r\n                }\r\n                )}\r\n            </List>\r\n        </ListBox>\r\n    );\r\n}\r\n\r\nexport default PfList;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Count = ({pfList}) => {\r\n   return (\r\n    <div>전체 : {pfList.filter( item => !item.deleted).length } / 진행중인 프로젝트 : {pfList.filter( item => !item.deleted && !item.done).length }</div>\r\n   )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport '../Portfolio.css';\r\nimport {InputBox} from '../components/InputBox';\r\nimport PfList from '../components/PfList';\r\nimport {Count} from '../components/Count';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst PortfolioMain = styled.main`\r\n    display: block;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    width: 80%;\r\n`;\r\n\r\nexport const Portfolio = ({pfList,setPfList}) => {\r\n\r\n    const onClickAllDelete = () => {\r\n        if(window.confirm('정말 모든 포트폴리오를 지우겠습니까?'))\r\n        {\r\n            const allpfList = pfList.map((item)=>(\r\n                {\r\n                    ...item,\r\n                    deleted : true \r\n                }\r\n            ));\r\n            setPfList(allpfList);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PortfolioMain>\r\n            <InputBox pfList={pfList} setPfList={setPfList}/>\r\n            <Count pfList={pfList}/>\r\n            <Button variant=\"outlined\" color=\"error\" onClick={onClickAllDelete}>\r\n                전체삭제\r\n            </Button>\r\n            <PfList \r\n                title={'진행중인 프로젝트'}\r\n                pfList={pfList}\r\n                setPfList={setPfList}\r\n                checkedList={false}\r\n            />\r\n            <PfList \r\n                title={'완료된 프로젝트'}\r\n                pfList={pfList}\r\n                setPfList={setPfList}\r\n                checkedList={true}\r\n            />\r\n        </PortfolioMain>\r\n    );\r\n}\r\n","import React, {useState,useRef,useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Link,\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n    Outlet\r\n  } from 'react-router-dom';\r\nimport {Main} from '../pages/Main';\r\nimport {Portfolio} from '../pages/Portfolio';\r\n\r\nconst Menu = styled.nav`\r\n    width: 100%;\r\n    overflow: auto;\r\n    box-shadow: 0 2px 2px -2px rgb(0 0 0 / 20%);\r\n`;\r\nconst MenuDiv = styled.div`\r\n    display: block;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    width: 80%;\r\n    position: relative;\r\n    text-align: left;\r\n`;\r\nconst MenuLogo = styled.h2`\r\n    color: #000000 !important;\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: .6;\r\n    }\r\n`;\r\nconst MenuUl = styled.ul`\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 1rem 0 0;\r\n    text-align: center;\r\n    bottom: 0;\r\n    position: absolute;\r\n    right: 0;\r\n`;\r\nconst MenuLi = styled.li`\r\n    color: #555;\r\n    display: inline-block;\r\n    padding: 0 2rem 0 0;\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: .6;\r\n      }\r\n`;\r\n\r\nexport const Header = ({pfList,setPfList}) => {\r\n    \r\n    return (\r\n        <BrowserRouter>\r\n            <Menu>\r\n                <MenuDiv>\r\n                    <Link to=\"/\">\r\n                    <MenuLogo>eebbni</MenuLogo>\r\n                    </Link>\r\n                    <MenuUl>\r\n                        <MenuLi><Link to=\"/about\">About</Link></MenuLi>\r\n                        <MenuLi><Link to=\"/portfolio\">Portfolio</Link></MenuLi>\r\n                    </MenuUl>\r\n                </MenuDiv>\r\n            </Menu>\r\n            <Routes>\r\n                <Route path='/' element={<Main />} />\r\n                <Route path='/about' element={<Main />} />\r\n                <Route path='/202112701-scy' element={<Main />} />\r\n                <Route path='/portfolio' element={<Portfolio pfList={pfList} setPfList={setPfList}/>} />\r\n            </Routes>\r\n        </BrowserRouter>\r\n       \r\n    );\r\n}\r\n","import React , {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Header} from '../components/Header';\r\n\r\nconst Homepage = styled.div`\r\n    min-width : 480px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Home = () => {\r\n    const [pfList, setPfList] = useState([]); //전체 포트폴리오 리스트\r\n\r\n    return (\r\n        <Homepage>\r\n           <Header pfList={pfList} setPfList={setPfList}></Header>\r\n        </Homepage>\r\n    );\r\n}\r\n\r\nexport default Home;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './pages/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <Home />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}