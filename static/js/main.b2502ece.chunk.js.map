{"version":3,"sources":["logo.svg","components/Main.js","components/InputBox.js","components/PfItem.js","components/PfList.js","components/Portfolio.js","components/Header.js","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["About","styled","main","Main","class","className","alt","src","process","id","Inputbox","div","Btn","input","button","InputBox","pfList","setPfList","useState","title","setTitle","project","setProject","skill","setSkill","inputRef","useRef","type","name","ref","onChange","e","target","value","onClick","alert","today","Date","nextpfList","concat","length","date","getFullYear","getMonth","getDate","console","log","EditBtn","DelBtn","EditInput","PfItem","pfItem","editInputRef","edited","setEdited","newText","setnewText","useEffect","current","focus","sticky_note","icon","faStickyNote","calendar_alt","faCalendarAlt","fa_cog","faCog","map","item","window","confirm","deleted","ListBox","List","ul","PfList","PortfolioMain","Portfolio","Menu","nav","MenuDiv","MenuLogo","h2","MenuUl","MenuLi","li","Header","href","to","path","element","Homepage","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAAe,I,wDCITA,EAAQC,IAAOC,KAAV,8GAOEC,EAAO,WAChB,OACI,eAACH,EAAD,WACI,qBAAKI,MAAM,QAAX,SACI,sBAAKA,MAAM,UAAX,UACI,qBAAKC,UAAU,SAASC,IAAI,eAAeC,IAAG,UAAKC,iBAAL,iBAC9C,sBAAKJ,MAAM,OAAX,UACI,qBAAKA,MAAM,QAAX,0BACA,qBAAKA,MAAM,cAAX,uCAIZ,sBAAKA,MAAM,UAAX,UACI,oBAAIK,GAAG,WAAP,sBADJ,oFAEgE,uBAFhE,oEAGgE,uBAHhE,yCAMI,uBAEA,oBAAIA,GAAG,SAAP,oBACA,6BACI,+DACI,+BACI,qDACA,2DAKZ,uBAEA,oBAAIA,GAAG,YAAP,uBApBJ,wCAqByC,uBArBzC,sDAsBwC,uBAtBxC,kCAuBmC,uBAvBnC,2CAwB4C,uBAxB5C,qDA2BI,8BC9CVC,G,MAAWT,IAAOU,IAAV,2HAcRC,GAReX,IAAOY,MAAV,qJAQNZ,IAAOa,OAAV,yOAcIC,EAAW,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAAe,EACnBC,mBAAS,IADU,mBACrCC,EADqC,KAC/BC,EAD+B,OAEfF,mBAAS,IAFM,mBAErCG,EAFqC,KAE7BC,EAF6B,OAGnBJ,mBAAS,IAHU,mBAGrCK,EAHqC,KAG/BC,EAH+B,OAIXN,mBAAS,IAJE,mBAKtCO,GALsC,UAK3BC,iBAAO,OA+CxB,OACI,eAAChB,EAAD,WACI,4BAAG,0FADP,kBAES,uBAAOiB,KAAK,OAAOC,KAAK,QAAQC,IAAKJ,EAAUK,SA3CvC,SAACC,GAClBX,EAASW,EAAEC,OAAOC,QA0C8DA,MAAOd,IAFvF,IAEgG,uBAFhG,oCAGY,uBAAOQ,KAAK,OAAOC,KAAK,UAAUE,SAxC3B,SAACC,GACpBT,EAAWS,EAAEC,OAAOC,QAuCoDA,MAAOZ,IAH/E,IAG0F,uBAH1F,qCAIa,uBAAOM,KAAK,OAAOC,KAAK,QAAQE,SArC5B,SAACC,GAClBP,EAASO,EAAEC,OAAOC,QAoCmDA,MAAOV,IAJ5E,IAIqF,uBACjF,cAACX,EAAD,CAAKsB,QAlCM,WACf,IAAIf,IAAUE,IAAYE,EAGtB,OADAY,MAAM,+IACC,EAGX,IAAMC,EAAQ,IAAIC,KAEZC,EAAatB,EAAOuB,OAAO,CAC7B9B,GAAIO,EAAOwB,OACXrB,MAAQA,EACRE,QAAUA,EACVE,MAAQA,EACRkB,KAAOL,EAAMM,cAAc,KAAKN,EAAMO,WAAa,GAAG,IAAIP,EAAMQ,YAGpE3B,EAAUqB,GAGVlB,EAAS,IACTE,EAAW,IACXE,EAAS,IAGTqB,QAAQC,IAAIR,IASkBX,KAAK,SAA/B,8B,uBCnFNoB,EAAU9C,IAAOa,OAAV,+PAaPkC,EAAS/C,IAAOa,OAAV,qOAWNmC,EAAYhD,IAAOY,MAAV,sJAwGAqC,EA/FA,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,OAAOnC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UACrBmC,EAAe1B,iBAAO,MADc,EAGfR,oBAAS,GAHM,mBAGnCmC,EAHmC,KAG5BC,EAH4B,OAIbpC,mBAASiC,EAAOhC,OAJH,mBAInCoC,EAJmC,KAI3BC,EAJ2B,KA2C1CC,qBAAU,WACFJ,GAEAD,EAAaM,QAAQC,UAE3B,CAACN,IAEH,IAAMO,EAAc,cAAC,IAAD,CAAiBC,KAAMC,MACrCC,EAAe,cAAC,IAAD,CAAiBF,KAAMG,MACtCC,EAAS,cAAC,IAAD,CAAiBJ,KAAMK,MAEtC,OACI,sBAAK9D,MAAM,iBAAX,UACQ,gCACI,oBAAIA,MAAM,kBAAV,SAEQiD,EACA,cAACJ,EAAD,CACItB,KAAK,OACLM,MAAOsB,EACP1B,IAAKuB,EACLtB,SAtCP,SAACC,GAClByB,EAAWzB,EAAEC,OAAOC,UAuCAkB,EAAOhC,QAGf,qBAAKf,MAAM,mBAEX,sBAAKA,MAAM,oBAAX,UACI,uBAAMA,MAAM,iBAAZ,UACKwD,EADL,IACkB,sBAAMxD,MAAM,sBAAZ,SAAmC+C,EAAO9B,aAE5D,uBACA,uBAAMjB,MAAM,iBAAZ,UACK2D,EADL,IACmB,sBAAM3D,MAAM,sBAAZ,SAAmC+C,EAAOV,UAE7D,uBACA,uBAAMrC,MAAM,iBAAZ,UACK6D,EADL,IACa,sBAAM7D,MAAM,sBAAZ,SAAmC+C,EAAO5B,iBAK/D8B,EACC,cAACN,EAAD,CAASpB,KAAK,SAASO,QAxDpC,WACI,IAAMI,EAAatB,EAAOmD,KAAI,SAACC,GAAD,mBAAC,eAEpBA,GAFmB,IAGtBjD,MAAQiD,EAAK3D,KAAO0C,EAAO1C,GAAK8C,EAAUa,EAAKjD,WAGvDF,EAAUqB,GAEVgB,GAAU,IA+CD,4BACA,cAACP,EAAD,CAASpB,KAAK,SAASO,QApEV,WAEtBoB,GAAU,IAkED,sBAEL,cAACN,EAAD,CAAQrB,KAAK,SAASO,QApFR,WAClB,GAAGmC,OAAOC,QAAQ,2FAClB,CACI,IAAMhC,EAAatB,EAAOmD,KAAI,SAACC,GAAD,mBAAC,eAEpBA,GAFmB,IAGtBG,QAAUH,EAAK3D,KAAO0C,EAAO1C,IAAY2D,EAAKG,aAGtDtD,EAAUqB,KA2EV,gCC9HNkC,EAAUvE,IAAOU,IAAV,wFAMP8D,EAAOxE,IAAOyE,GAAV,iIAkCKC,EA1BA,SAAC,GAAwB,IAAvB3D,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAEpB,OACI,cAACuD,EAAD,UACI,cAACC,EAAD,UACIzD,GACAA,EAAOmD,KAAI,SAACC,GAGR,OAAGA,EAAKG,QAAgB,KAGpB,cAAC,EAAD,CAEIpB,OAAQiB,EACRpD,OAAQA,EACRC,UAAWA,GAHNmD,EAAK3D,YCzBhCmE,EAAgB3E,IAAOC,KAAV,8GAON2E,EAAY,SAAC,GAAwB,IAAvB7D,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAC9B,OACI,eAAC2D,EAAD,WACI,cAAC,EAAD,CAAU5D,OAAQA,EAAQC,UAAWA,IACrC,cAAC,EAAD,CACID,OAAQA,EACRC,UAAWA,QCPrB6D,EAAO7E,IAAO8E,IAAV,qHAKJC,EAAU/E,IAAOU,IAAV,8JAQPsE,EAAWhF,IAAOiF,GAAV,kGAMRC,EAASlF,IAAOyE,GAAV,iLASNU,EAASnF,IAAOoF,GAAV,4KAUCC,EAAS,SAAC,GAAwB,IAAvBtE,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAW3B,OACI,eAAC,IAAD,WACI,cAAC6D,EAAD,UACI,eAACE,EAAD,WACI,cAACC,EAAD,CAAUM,KAAK,IAAf,oBAGA,eAACJ,EAAD,WACI,cAACC,EAAD,UAAQ,cAAC,IAAD,CAAMI,GAAG,GAAT,qBACR,cAACJ,EAAD,UAAQ,cAAC,IAAD,CAAMI,GAAG,aAAT,iCAIpB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,CAAW1E,OAAQA,EAAQC,UAAWA,aCxElF0E,EAAW1F,IAAOU,IAAV,wJAkBCiF,EAVF,WAAO,IAAD,EACa1E,mBAAS,IADtB,mBACRF,EADQ,KACAC,EADA,KAGf,OACI,cAAC0E,EAAD,UACG,cAAC,EAAD,CAAQ3E,OAAQA,EAAQC,UAAWA,OCR/B4E,OANf,WACE,OACE,cAAC,EAAD,KCMWC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.b2502ece.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState,useRef,useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport '../Main.css';\r\n\r\nconst About = styled.main`\r\n    display: block;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    width: 80%;\r\n`;\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <About>\r\n            <div class=\"about\">\r\n                <div class=\"profile\">\r\n                    <img className=\"selfie\" alt=\"ChaeYeon Son\" src={`${process.env.PUBLIC_URL}/zepeto.jpg`}/>\r\n                    <div class=\"info\">\r\n                        <div class=\"title\">ChaeYeon Son</div>\r\n                        <div class=\"description\">PHP web developer</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"content\">\r\n                <h1 id=\"about-me\">About Me</h1>\r\n                I love PHP 😍 «&nbsp;This can express me in one sentence. 😉<br/>\r\n                Currently, I’m learning Vanila Javascript , React , Node.js <br/>\r\n                I want to be a Front-end Web Developer\r\n\r\n                <br/>\r\n\r\n                <h1 id=\"career\">Career</h1>\r\n                <ul>\r\n                    <li>First Company (2020/10 ~ ing)\r\n                        <ul>\r\n                            <li>1st B2B Open Market</li>\r\n                            <li>PHP Web Developer</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n\r\n                <br/>\r\n\r\n                <h1 id=\"interests\">Interests</h1>\r\n                I am interested in technology trends.<br/>\r\n                I’m not afraid to learn languages.🤭<br/>\r\n                I like to study many languages.<br/>\r\n                I want to be a great at web development.<br/>\r\n                In Php ,React ,Node.js …or else. 🧐\r\n\r\n                <br/>\r\n            </div>\r\n        </About>\r\n    );\r\n}\r\n","import React, {useState,useRef,useEffect} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport styled from 'styled-components';\r\n\r\nconst Inputbox = styled.div`\r\n    margin-top:20px;\r\n    padding:10px;\r\n    width: 350px;\r\n    border : 1px solid #000000; \r\n`;\r\nconst Inputbox_inp = styled.input`\r\nflex: 1; \r\nborder: none; \r\nborder-bottom: 1px solid #f1f3f5; \r\npadding: 10px; \r\nheight: 50px; \r\nbox-sizing: border-box;\r\n`;\r\nconst Btn = styled.button`\r\nborder: none; \r\nborder-radius: 0; \r\nbackground-color: #d0ebff; \r\ncolor: #1c7ed6; \r\nheight: 30px; \r\nwidth: 50px; \r\nfont-weight: bold;\r\n&:hover {\r\n    cursor: pointer;\r\n    background-color: #1f9dfa;\r\n  }\r\n`;\r\n\r\nexport const InputBox = ({pfList,setPfList}) => {\r\n    const [title,setTitle] = useState('');\r\n    const [project,setProject] = useState('');\r\n    const [skill,setSkill] = useState('');\r\n    const [portfolio,setPortfolio] = useState('');\r\n    const inputRef = useRef(null);\r\n\r\n    //정상동작 확인(pfList에 대해서)\r\n    // useEffect(() => {\r\n    //     console.log(pfList);\r\n    // },[pfList])\r\n\r\n    const TitleHandler = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const ProjectHandler = (e) => {\r\n        setProject(e.target.value);\r\n    }\r\n\r\n    const SkillHandler = (e) => {\r\n        setSkill(e.target.value);\r\n    }\r\n\r\n    const onClickBtn = () => {\r\n        if(!title || !project || !skill)\r\n        {\r\n            alert('값이 빠졌습니다. 빈값을 확인하고 다시 입력해주세요');\r\n            return false;\r\n        }\r\n\r\n        const today = new Date();\r\n\r\n        const nextpfList = pfList.concat({\r\n            id: pfList.length,\r\n            title : title,\r\n            project : project,\r\n            skill : skill,\r\n            date : today.getFullYear()+'-'+(today.getMonth() + 1)+'-'+today.getDate()\r\n        })\r\n\r\n        setPfList(nextpfList);\r\n\r\n        //input값 초기화\r\n        setTitle('');\r\n        setProject('');\r\n        setSkill('');\r\n        \r\n        // inputRef.current.focus(); //클릭 후 포커싱\r\n        console.log(nextpfList);\r\n    }\r\n\r\n    return (\r\n        <Inputbox>\r\n            <p><b>포트폴리오 추가하기</b></p>\r\n            제목 : <input type=\"text\" name=\"title\" ref={inputRef} onChange={TitleHandler} value={title}/> <br/>\r\n            프로젝트명 : <input type=\"text\" name=\"project\" onChange={ProjectHandler} value={project}/> <br/>\r\n            사용 스킬명 : <input type=\"text\" name=\"skill\" onChange={SkillHandler} value={skill}/> <br/>\r\n            <Btn onClick={onClickBtn} type=\"submit\">추가</Btn>\r\n        </Inputbox>\r\n    );\r\n}\r\n","import React, { useEffect , useState , useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst EditBtn = styled.button`\r\n    border: none; \r\n\r\n    border-radius: 0; \r\n    height: 36px; \r\n    width: 36px; \r\n    margin-right: 3px;\r\n    background-color: inherit;\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: #d0ebff;\r\n      }\r\n`;\r\nconst DelBtn = styled.button`\r\n    border: none; \r\n    border-radius: 0; \r\n    height: 36px; \r\n    width: 36px; \r\n    background-color: inherit;\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: #d0ebff;\r\n      }\r\n`;\r\nconst EditInput = styled.input`\r\nflex: 1; \r\nborder: none; \r\nborder-bottom: 1px solid #f1f3f5; \r\npadding: 5px; \r\nfont-size: 1em; \r\nbox-sizing: border-box;\r\n`;\r\n\r\nconst PfItem = ({pfItem,pfList,setPfList}) => {\r\n    const editInputRef = useRef(null);\r\n\r\n    const [edited,setEdited] = useState(false);\r\n    const [newText,setnewText] = useState(pfItem.title);//처음에는 기존의 값임 , 제목만 수정가능..\r\n\r\n    const onClickDelete = () => {\r\n        if(window.confirm('해당 포트폴리오를 지우겠습니까?'))\r\n        {\r\n            const nextpfList = pfList.map((item)=>(\r\n                {\r\n                    ...item,\r\n                    deleted : item.id === pfItem.id ? true : item.deleted\r\n                }\r\n            ));\r\n            setPfList(nextpfList);\r\n        }\r\n    }\r\n\r\n    //수정버튼으로 변경하기\r\n    const onClickEditButton = () => \r\n    {\r\n        setEdited(true);\r\n    }\r\n\r\n    //새로운 글자 세팅\r\n    const onChangeEdit = (e) => {\r\n        setnewText(e.target.value)\r\n    }\r\n\r\n    //서브밋시키기\r\n    function onClickSubmitButton (){\r\n        const nextpfList = pfList.map((item)=>(\r\n            {\r\n                ...item,\r\n                title : item.id === pfItem.id ? newText : item.title\r\n            }\r\n        ));\r\n        setPfList(nextpfList); //새롭게 리스트 수정\r\n\r\n        setEdited(false); // 수정상태에서 다시 읽기로 변경\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if (edited)\r\n        {\r\n            editInputRef.current.focus();\r\n        }\r\n    },[edited]);\r\n    \r\n    const sticky_note = <FontAwesomeIcon icon={faStickyNote} />\r\n    const calendar_alt = <FontAwesomeIcon icon={faCalendarAlt} />\r\n    const fa_cog = <FontAwesomeIcon icon={faCog} />\r\n\r\n    return (\r\n        <div class=\"portfolio-item\">\r\n                <div>\r\n                    <h1 class=\"portfolio-title\">\r\n                        {\r\n                            edited ? \r\n                            <EditInput\r\n                                type=\"text\"\r\n                                value={newText}\r\n                                ref={editInputRef}\r\n                                onChange={onChangeEdit}\r\n                            /> :\r\n                            pfItem.title\r\n                         }\r\n                    </h1>\r\n                    <div class=\"portfolio-line\"></div>\r\n\r\n                    <div class=\"portfolio-content\"> \r\n                        <span class=\"portfolio-icon\">\r\n                            {sticky_note} <span class=\"portfolio-icon-text\">{pfItem.project}</span>\r\n                        </span>\r\n                        <br/>\r\n                        <span class=\"portfolio-icon\">\r\n                            {calendar_alt} <span class=\"portfolio-icon-text\">{pfItem.date}</span>\r\n                        </span>\r\n                        <br/>\r\n                        <span class=\"portfolio-icon\">\r\n                            {fa_cog} <span class=\"portfolio-icon-text\">{pfItem.skill}</span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            { \r\n                edited ? \r\n                (<EditBtn type=\"button\" onClick={onClickSubmitButton} > 👌 </EditBtn>) :\r\n                (<EditBtn type=\"button\" onClick={onClickEditButton}> ✏ </EditBtn>)\r\n            }\r\n            <DelBtn type=\"button\" onClick={onClickDelete}> 🗑 </DelBtn>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PfItem;","import React from 'react';\r\nimport PfItem from './PfItem';\r\nimport styled from 'styled-components';\r\n\r\nconst ListBox = styled.div`\r\nmargin-top: 30px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nconst List = styled.ul`\r\nlist-style: none;\r\ndisplay: flex;\r\nflex-direction: column; \r\njustify-content: center;\r\n padding: 0;\r\n`;\r\n\r\nconst PfList = ({pfList,setPfList}) => {\r\n    \r\n    return(\r\n        <ListBox>\r\n            <List>\r\n               {pfList && //pfList가 있을때만 함\r\n                pfList.map((item)=>\r\n                { \r\n                    //삭제된 포트폴리오는 출력하지 않음\r\n                    if(item.deleted) return null;\r\n\r\n                    return (\r\n                        <PfItem \r\n                            key={item.id}\r\n                            pfItem={item}\r\n                            pfList={pfList}\r\n                            setPfList={setPfList}\r\n                        />\r\n                    )\r\n                }\r\n                )}\r\n            </List>\r\n        </ListBox>\r\n    );\r\n}\r\n\r\nexport default PfList;","import React, {useState,useRef,useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport '../Portfolio.css';\r\nimport {InputBox} from '../components/InputBox';\r\nimport PfList from '../components/PfList';\r\n\r\nconst PortfolioMain = styled.main`\r\n    display: block;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    width: 80%;\r\n`;\r\n\r\nexport const Portfolio = ({pfList,setPfList}) => {\r\n    return (\r\n        <PortfolioMain>\r\n            <InputBox pfList={pfList} setPfList={setPfList}/>\r\n            <PfList \r\n                pfList={pfList}\r\n                setPfList={setPfList}\r\n            />\r\n        </PortfolioMain>\r\n    );\r\n}\r\n","import React, {useState,useRef,useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    Link,\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n    Outlet\r\n  } from 'react-router-dom';\r\nimport {Main} from '../components/Main';\r\nimport {Portfolio} from '../components/Portfolio';\r\n\r\nconst Menu = styled.nav`\r\n    width: 100%;\r\n    overflow: auto;\r\n    box-shadow: 0 2px 2px -2px rgb(0 0 0 / 20%);\r\n`;\r\nconst MenuDiv = styled.div`\r\n    display: block;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    width: 80%;\r\n    position: relative;\r\n    text-align: left;\r\n`;\r\nconst MenuLogo = styled.h2`\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: .6;\r\n    }\r\n`;\r\nconst MenuUl = styled.ul`\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 1rem 0 0;\r\n    text-align: center;\r\n    bottom: 0;\r\n    position: absolute;\r\n    right: 0;\r\n`;\r\nconst MenuLi = styled.li`\r\n    color: #555;\r\n    display: inline-block;\r\n    padding: 0 2rem 0 0;\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: .6;\r\n      }\r\n`;\r\n\r\nexport const Header = ({pfList,setPfList}) => {\r\n\r\n    // const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // const open = Boolean(anchorEl);\r\n    // const handleClick = (event) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // };\r\n    // const handleClose = () => {\r\n    //     setAnchorEl(null);\r\n    // };\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Menu>\r\n                <MenuDiv>\r\n                    <MenuLogo href=\"/\">\r\n                        eebbni\r\n                    </MenuLogo>\r\n                    <MenuUl>\r\n                        <MenuLi><Link to=\"\">About</Link></MenuLi>\r\n                        <MenuLi><Link to=\"/portfolio\">Portfolio</Link></MenuLi>\r\n                    </MenuUl>\r\n                </MenuDiv>\r\n            </Menu>\r\n            <Routes>\r\n                <Route path='/' element={<Main />} />\r\n                <Route path='/202112701-scy' element={<Main />} />\r\n                <Route path='/portfolio' element={<Portfolio pfList={pfList} setPfList={setPfList}/>} />\r\n            </Routes>\r\n        </BrowserRouter>\r\n       \r\n    );\r\n}\r\n","import React , {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Header} from '../components/Header';\r\nimport {Main} from '../components/Main';\r\n\r\nconst Homepage = styled.div`\r\n    min-width : 480px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Home = () => {\r\n    const [pfList, setPfList] = useState([]); //전체 포트폴리오 리스트\r\n\r\n    return (\r\n        <Homepage>\r\n           <Header pfList={pfList} setPfList={setPfList}></Header>\r\n        </Homepage>\r\n    );\r\n}\r\n\r\nexport default Home;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './pages/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <Home />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}